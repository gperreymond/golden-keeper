name: Moleculer

defaults:
  run:
    working-directory: ./

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  dependencies:
    runs-on: ubuntu-latest
    container:
      image: node:12.19-alpine3.9
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Install packages
        run: yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v2.1.3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  linter:
    runs-on: ubuntu-latest
    needs: dependencies
    container:
      image: node:12.19-alpine3.9
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache node_modules
        uses: actions/cache@v2.1.3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run standard linter
        run: yarn standard
        env:
          NODE_ENV: test

  tests:
    runs-on: ubuntu-latest
    needs: dependencies
    container:
      image: node:12.19-alpine3.9
    steps:
      - name: Update alpine packages
        run: apk add --update bash
      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Run tests for moleculer
        run: yarn test:moleculer
        env:
          NODE_ENV: test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1.2.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: Moleculer
          directory: ./coverage
          files: clover.xml
          fail_ci_if_error: true
          path_to_write_report: ./coverage/codecov_report.txt
